################################################################################
# Deck Verified Site - Example Environment Configuration
#
# Copy this file to ".env" and fill in the required values for your environment.
# Values provided below reflect:
#  - The defaults used by the current code (backend/frontend)
#  - Sensible placeholders for secrets and URLs
#
# Conventions:
#  - Boolean values are strings: "true" or "false" (case-insensitive where noted)
#  - Empty values often imply a fallback behavior (see docs for each key)
################################################################################

############################################
# 1) GLOBAL / RUNTIME
############################################

# Node environment. Impacts logging and behavior in some tools.
# Default: "development"
NODE_ENV=development

# Base URL the backend uses where appropriate (e.g. building links).
# Default: "http://deckverified.localhost"
# For prod, set to your public origin, e.g. "https://deckverified.games"
BASE_URL=http://deckverified.localhost


############################################
# 2) BACKEND - REQUIRED TOKENS & SECRETS
############################################

# REQUIRED: GitHub token to increase GitHub API rate limits. Must have public repo read access.
# Compose enforces this as required.
# Example: ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
GH_TOKEN=ghp_change_me_with_a_real_token


############################################
# 3) BACKEND - CACHE & REDIS
############################################

# Redis host the API connects to. In docker-compose it's "redis".
# Default: "127.0.0.1"
REDIS_HOST=127.0.0.1

# Redis port.
# Default: 6379
REDIS_PORT=6379

# REQUIRED: Redis password (used by redis/redis-stack container and the API).
# Compose enforces this as required.
REDIS_PASSWORD=local

# Default cache TTL (seconds) for game information to avoid GitHub rate limiting.
# Default: 600
DEFAULT_CACHE_TIME=600


############################################
# 4) BACKEND - REVERSE PROXY & RATE LIMITING
############################################

# How many reverse proxies sit in front of the API (for correct client IP detection).
# Default: 0
REVERSE_PROXY_COUNT=0

# Disable the API rate limiter.
# Default behavior in code: enable unless explicitly set to "true" here.
# Production should normally keep the limiter enabled => set to "false".
DISABLE_RATE_LIMITER=false


############################################
# 5) BACKEND - SCHEDULED TASKS
############################################

# Run scheduled jobs on API start.
# Default: false (only runs when set to "true")
# Production usually should be false (tasks run on a separate worker/schedule).
RUN_SCHEDULED_TASKS_ON_START=false


############################################
# 6) BACKEND - OPTIONAL SERVICES
############################################

# Blogger API key (optional). Used by backend for generating blog posts summarising the current set of game reports
# Default: unset/null
BLOGGER_API_KEY=


############################################
# 7) AUTH & LOGIN (GitHub App PKCE)
############################################

# Frontend feature flag: Enable login
VITE_ENABLE_LOGIN=false

# GitHub App credentials (optional but required if enabling login).
# To enable login, configure a GitHub App and set both Client ID and Client Secret.
# Behavior:
#  - Backend auto-enables login if both GITHUB_APP_CLIENT_ID and GITHUB_APP_CLIENT_SECRET are present.
#       Otherwise, login is disabled on the backend.
GITHUB_APP_CLIENT_ID=
GITHUB_APP_CLIENT_SECRET=

# Comma-separated list of allowed public web origins for certain auth endpoints (CORS).
# Example: "https://deckverified.games,https://www.deckverified.games"
# Default: empty => allows any origin (only for those endpoints). For production, lock this down.
PUBLIC_WEB_ORIGINS=http://deckverified.localhost


############################################
# 8) FRONTEND / SSR CONFIGURATION
############################################
# The SSR layer and frontend may need to know public/internal origins:

# SSR_API_ORIGIN:
#  - Where SSR should call the API directly (bypassing CDN/reverse proxy).
#  - In docker-compose SSR uses "http://api:9022"
# Recommended:
#  - Local dev: http://127.0.0.1:9022
#  - Docker dev: http://api:9022
SSR_API_ORIGIN=http://127.0.0.1:9022


############################################
# 9) OBSERVABILITY - SENTRY (OPTIONAL)
############################################
# When SENTRY_DSN is set, the backend enables Sentry w/ tracing and profiling.

# Sentry DSN to report errors from backend.
SENTRY_DSN=

# Traces sample rate (0.0 - 1.0). Default: 0.1
SENTRY_TRACES_SAMPLE_RATE=0.1

# Profiles sample rate (0.0 - 1.0). Default: 0.5
SENTRY_PROFILES_SAMPLE_RATE=0.5

# Optional tags to attach to Sentry events
SENTRY_SERVICE_NAME=deck-verified-api
SENTRY_DOCKER_IMAGE_TAG=
