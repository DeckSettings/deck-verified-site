on:
  workflow_dispatch:
  push:
    branches: [ staging, master ]
  schedule:
    # At 02:30 on Saturday
    - cron: '30 2 * * 6'

jobs:
  build-api-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set Docker image name
        id: set-image
        run: |
          echo  "GITHUB_REF:${GITHUB_REF}"
          echo  "GITHUB_REPOSITORY:${GITHUB_REPOSITORY}"
          VERSION_TAG=${GITHUB_REF#refs/*/}
          ORG=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          echo "docker_image=ghcr.io/${ORG}/deck-verified-api" >> $GITHUB_OUTPUT
          if [[ ${VERSION_TAG%/merge} == 'master' ]]; then
            echo "docker_tag=latest" >> $GITHUB_OUTPUT
          elif [[ ${VERSION_TAG%/merge} == 'staging' ]]; then
            echo "docker_tag=staging" >> $GITHUB_OUTPUT
          fi


      - name: Log into registry ${{ vars.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Container metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.set-image.outputs.docker_image }}
          labels: |
            maintainer=Josh.5
            org.opencontainers.image.title=deck-verified-api

      - name: Build and push Container image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          context: backend
          pull: true
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ steps.set-image.outputs.docker_image }}:${{ steps.set-image.outputs.docker_tag }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-web-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set Docker image name
        id: set-image
        run: |
          echo  "GITHUB_REF:${GITHUB_REF}"
          echo  "GITHUB_REPOSITORY:${GITHUB_REPOSITORY}"
          VERSION_TAG=${GITHUB_REF#refs/*/}
          ORG=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          echo "docker_image=ghcr.io/${ORG}/deck-verified-web" >> $GITHUB_OUTPUT
          if [[ ${VERSION_TAG%/merge} == 'master' ]]; then
            echo "docker_tag=latest" >> $GITHUB_OUTPUT
          elif [[ ${VERSION_TAG%/merge} == 'staging' ]]; then
            echo "docker_tag=staging" >> $GITHUB_OUTPUT
          fi

      - name: Log into registry ${{ vars.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Container metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.set-image.outputs.docker_image }}
          labels: |
            maintainer=Josh.5
            org.opencontainers.image.title=deck-verified-web

      - name: Build and push Container image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          file: docker/Dockerfile
          pull: true
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ steps.set-image.outputs.docker_image }}:${{ steps.set-image.outputs.docker_tag }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
